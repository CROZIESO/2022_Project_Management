import pygame, sys

class SNAKE():
    pass

class FOOD():
    pass 

class GAME:
    def __init__(self):
        self.snake = SNAKE()
        self.fruit= FOOD()

    def draw_elements(self):
        self.grid()

    def grid(self):
        "sets up grid with purple grass"
        grass_colour = (204,169,221)
        grid_line_colour = (200, 200, 200)

        for x in range(0, block_size * block_number, block_size):
            for y in range(0, block_size * block_number, block_size):
                # draws outline around the blocks in white
                grid_rect = pygame.Rect(x, y, block_size, block_size)
                pygame.draw.rect(window, grid_line_colour, grid_rect, 1)

        for row in range(block_number):
            # alternates the shade of purple within the column for each uneven row
            if row % 2 != 0:
                for col in range(block_number):
                    if col % 2 != 0:
                        # rect - x,y,w,h - selects blocks to shade diff colour
                        grass_rect = pygame.Rect(col * block_size,row * block_size,block_size,block_size)
                        # displays rect
                        pygame.draw.rect(window,grass_colour,grass_rect)
            else:
                # alternates the shade of purple within the column for each even row
                for col in range(block_number):
                    if col % 2 == 0:
                            # rect - x,y,w,h - selects blocks to shade diff colour
                            grass_rect = pygame.Rect(col * block_size,row * block_size,block_size,block_size)
                            # displays rect
                            pygame.draw.rect(window,grass_colour,grass_rect)

pygame.init()
# sets up blocks on window
block_size = 40
block_number = 20
# sets up window to be 800px by 800px
window = pygame.display.set_mode((block_size * block_number,block_size * block_number))
# clock object so that frame rate is consistent
clock = pygame.time.Clock()

main = GAME()

while True:
    # start of loop for every game check for every possible event
    for event in pygame.event.get():
        # checks event to quit game
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
    # colours the window/background
    window.fill((177,156,217))
    main.draw_elements()
    pygame.display.update()
    clock.tick(60)



# notes - screen, display screen, rect - movement in all places - create rect itself, or take surface and create rect around it
# diff between rectangle and surface - rectangle easier to code, rectangle usually part of surface
# replace rect with any other shape if want
